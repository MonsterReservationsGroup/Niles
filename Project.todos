@Title: Niles 

MVP:
  Describe the solution from the user perspective cronological order:
    [] I type 'niles' into the terminal; the terminal returns a version number.
    [] I type 'niles create'; the terminal creates a specificed file scaffold
    
    @Feature: niles command
    
      @Purpose:
        This gives the version number of the program as well as serves as a good
        'hello world' for the program.
      @Pcode:
        [] set up webpack
        [] set up jest
        [] set up typescript
        [] set up inquierer to ask user for options
        [] create a component execution path
        [] set up the cli command to use bin
        [] find header at that goes at the top of the root file
        [] write a reducer to handle differnt commands in the future
        [] set up file with standalone command
        [] get the package.json
        [] parse the package.json
        [] get the version
        [] return the version
        [] **use chalk to style the output
        [] **use listr to list progress of tasks
        [] **use boxen to draw boxes around the output
        Input Interface Names:
          boolean
          Output Interface Names:
        string
        Fixtures:
        none
      @Notes:
        none

        

        @Feature: niles create command

        @Purpose:
        This will allow you to create different kinds of scaffolds for files
        depending on the input. This way save yourself from having to remember
        exactly how the syntax goes as well save time.
        @Pcode:
        :::core:::
          [] loadInquierer
          [] reduce arguments to a specific execution path
          [] load previous execution path
          [] run reduced execution path
          [] **use chalk to style the output
          [] **use listr to list progress of tasks
          [] **use boxen to draw boxes around the output
       :::component execution path:::
          [] make root file
          [] cd into the root file
          [] make the following folders, Assets, Helpers, Tests, PAPI, DVIEW
          [] **use chalk to style the output
          [] **use listr to list progress of tasks
          [] **use boxen to draw boxes around the output

      Input Interface Names:
        boolean, string
      Output Interface Names:
        file
      Fixtures:
        none
      @Notes:
        none



new features go here

WISHLIST: